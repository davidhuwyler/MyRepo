=============================================================================
List of generated methods in project: ProcessorExpert

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "LED1"      (component LED)
   - LED1_Init -Performs the LED driver initialization.
   - LED1_Deinit -Deinitializes the driver
   - LED1_On -This turns the LED on.
   - LED1_Off -This turns the LED off.
   - LED1_Neg -This negates/toggles the LED
   - LED1_Get -This returns logical 1 in case the LED is on, 0 otherwise.
   - LED1_Put -Turns the LED on or off.
   - LED1_SetRatio16 -Method to specify the duty cycle. If using a PWM pin, this means the duty cycle is set. For On/off pins, 
                values smaller 0x7FFF means off, while values greater means on.

Module "LED2"      (component LED)
   - LED2_Init -Performs the LED driver initialization.
   - LED2_Deinit -Deinitializes the driver
   - LED2_On -This turns the LED on.
   - LED2_Off -This turns the LED off.
   - LED2_Neg -This negates/toggles the LED
   - LED2_Get -This returns logical 1 in case the LED is on, 0 otherwise.
   - LED2_Put -Turns the LED on or off.
   - LED2_SetRatio16 -Method to specify the duty cycle. If using a PWM pin, this means the duty cycle is set. For On/off pins, 
                values smaller 0x7FFF means off, while values greater means on.

Module "WAIT1"     (component Wait)
   - WAIT1_Wait10Cycles -Wait for 10 CPU cycles.
   - WAIT1_Wait100Cycles -Wait for 100 CPU cycles.
   - WAIT1_WaitCycles -Wait for a specified number of CPU cycles (16bit data type).
   - WAIT1_WaitLongCycles -Wait for a specified number of CPU cycles (32bit data type).
   - WAIT1_Waitms -Wait for a specified time in milliseconds.
   - WAIT1_Waitus -Wait for a specified time in microseconds.
   - WAIT1_Waitns -Wait for a specified time in nano seconds.
   - WAIT1_WaitOSms -If an RTOS is enabled, this routine will use a non-blocking wait method. Otherwise it will do a 
                busy/blocking wait.

Module "SegLCD1"   (component SegLCD_LDD)
   - SegLCD1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc.   If the "Enable in init. code" is set to "yes" value 
                then the device is also enabled(see the description of the Enable() method). In this case the Enable() method 
                is not necessary and needn't to be generated.    This method can be called only once. Before the second call of 
                Init() the Deinit() must be called first.
   - SegLCD1_Deinit -Deinitializes the device. Switches off the device, frees the device data structure memory, interrupts 
                vectors, etc.
   - SegLCD1_GetEventStatus -Gets current pending flags and clears them. This method is available if the interrupt service 
                property is disabled. This method must be called in polling mode, when is called method StartFaultDetectFrame.
   - SegLCD1_SetFrontplaneData -Set data to the LCD frontplane data registers. It sets/clears all used segments.
   - SegLCD1_GetFrontplaneData -Get data from the LCD frontplane data registers.
   - SegLCD1_SetBlinking -Activates/deactivates blinking of all segments (according to parameter BlinkMode).
   - SegLCD1_SetBlank -This method sets the blank display without affecting state of each segment. If supported by the LCD 
                module, the method allows alternate display setting. A segment state is set by method SetFrontplaneData or 
                SetAlternateFrontplaneData.

Module "Cpu"       (component MKL46Z256MC4)

===================================================================================
